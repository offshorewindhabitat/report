# Methods

```{r setup-methods}
source("scripts/setup.R")
```

In order to assess species and habitats across the federal waters of the contiguous U.S. (excluding Alaska and Hawaii), the spatial reporting units were setup based on BOEM planning areas dubbed "Zones" in this report and overall regions were first clipped to the United States Exclusive Economic Zone (EEZ) (@fig-map-zones).

## Spatial Hierarchy: Regions \> Zones \> Blocks

Determination of regions for which to assess offshore habitat was based on BOEM activity and representativeness of habitats across the continental United States (@fig-map-zones). The first (and presently only commercially in production) U.S. wind farm at Block Island, NJ is in the North Atlantic where \$4.4 billion was paid in offshore wind bids earlier this year ([DOE news](https://poweralliance.org/2022/02/25/boem-sets-offshore-energy-records-with-4-37-billion-in-winning-bids-for-wind-sale/)). The Atlantic seaboard slopes gradually making it appropriate for fixed platforms, whereas the Pacific coast drops off quickly into deeper depths making floating platforms more suitable. These technological differences therefore affect the bottom habitats differently. Whereas fixed platforms involve pile driving and addition of hard surfaces for habitats, the floating platforms leave only the benthic footprint of moorings and submarine cables.

### Regions and Zones

```{r eval=do_figs}
#| label: fig-map-zones
#| fig-cap: !expr link_caption("Regions (Atlantic, Gulf of Mexico, and Pacific) are subdivided into Zones corresponding to BOEM Planning Areas in federal waters clipped to the U.S. Exclusive Economic Zone (except Alaska and Hawaii). To prevent overcrowding of labels only abbreviations are shown for Central (CGM), Eastern (EGM) and Western (WGM) Gulf of Mexico.")

f_rgns <- oh_zones |> 
  group_by(region) |> 
  summarize() |> 
  st_simplify(T, 1000)

f_zns <- oh_zones_s1k |>
  filter(zone_version == 1)

oh_map() |> 
  addPolygons(
    data        = f_zns |> 
      filter(region != "Gulf of Mexico"),
    color       = ~get_colors(zone_name),
    weight      = 2,
    opacity     = 1,
    fillOpacity = 0.7,
    label       = ~zone_name, # ~glue("{zone_name} ({toupper(zone_key)})"),
    labelOptions = labelOptions(
      noHide   = T,
      textOnly = T,
      textsize = "12px")) |> 
  addPolygons(
    data        = f_zns |> 
      filter(region == "Gulf of Mexico"),
    color       = ~get_colors(zone_name),
    weight      = 2,
    opacity     = 1,
    fillOpacity = 0.7,
    label       = ~toupper(zone_key),
    labelOptions = labelOptions(
      noHide = T,
      textOnly = T,
      textsize = "12px")) |> 
  addPolygons(
    data        = f_rgns |> 
      filter(region != "Gulf of Mexico"),
    color       = ~get_colors(region),
    weight      = 3,
    opacity     = 1,
    fillOpacity = 0,
    label       = ~region,
    labelOptions = labelOptions(
      noHide = T,
      textOnly = T,
      textsize = "18px")) |> 
  addPolygons(
    data        = f_rgns |> 
      filter(region == "Gulf of Mexico"),
    color       = ~get_colors(region),
    weight      = 3,
    opacity     = 1,
    fillOpacity = 0,
    label       = ~region,
    labelOptions = labelOptions(
      noHide = T,
      offset = c(0, 30),
      textOnly = T,
      textsize = "18px"))
```

<!-- Figure 2. Pacific regions to include in the assessment: Washington/Oregon (left) and Southern California (right). The individual lease areas indicate Call Areas (red) and Proposed Sale Notices (blue). -->

<!-- Figure 3. Atlantic regions to include in the assessment: North Atlantic (left) and Mid Atlantic (right). The individual lease areas indicate Call Areas (red) and Commercial Leases (green). -->

<!-- Figure 4. Gulf of Mexico region to include in the assessment: Central Gulf of Mexico. The individual lease areas indicate Call Areas (red). -->

### Blocks

```{r eval=do_tbls}
#| label: tbl-zone-blocks
#| tbl-cap: Summary of Blocks per Zone, grouped by Region.

oh_blocks |>
  filter(zone_version == 1) |> 
  st_drop_geometry() |> 
  # region, zone_name from oh_zones
  left_join(
    oh_zones |> 
      st_drop_geometry() |> 
      select(zone_key, zone_name, region),
    by = "zone_key") |> 
  group_by(region, zone_name) |> 
  summarize(
    n        = n(),
    area_km2 = sum(area_km2),
    .groups  = "drop") |> 
  group_by(region) |> 
  gt() |> 
  cols_label(
    zone_name = "Zone",
    n         = "# of Blocks",
    area_km2  = html("Block Area (km^2^)")) |> 
   fmt_number(
     c(n,area_km2), decimals = 0)
```

## Datasets

In order to combine species distribution models (SDMs) from varying sources, they needed to be harmonized according to: 1) a common taxonomy, using the AphiaID from the World Register of Marine Species (WoRMS) at [MarineSpecies.org](https://MarineSpecies.org); 2) a common geography, using the most refined available global bathymetric raster, the General Bathymetric Chart of the Oceans (GEBCO) availalbe at [GEBCO.net](https://www.gebco.net); and 3) a common response term.

The harmonized response term rescales input SDMs 0 to 100 according to a preferred hierarchy of available models for the same species: 1) density surface models, where the original response was # individuals / km^2^ for `r nspp_density` species of marine mammals, seabirds and sea turtles across 4 datasets; 2) habitat suitability models, which had a continuous response of 0 to 1 for `r format(nspp_probability, big.mark=",")` species from [AquaMaps.org](https://www.aquamaps.org); and 3) expert range maps  with a binary response of 0 or 1 for `r nspp_range` species from the [IUCN Red List](https://www.iucnredlist.org/resources/spatial-data-download). 

From the combined SDMs, species richness and species abundance were calculated per pixel along with an aggregate extinction risk for those species having an IUCN Red List category assigned. An overall conservation score also incorporated primary productivity, hydrothermal vents and seamounts with equal weighting for each layer. These scores were calculated on a per pixel basis as well as aggregated to zone and region levels. At the block level, the standard deviation from the zone's mean score was calculated to differentiate and rank blocks.

```{r eval=do_tbls}
#| label: tbl-datasets
#| tbl-cap: Summary of datasets.

d_ds <- tbl(con, "datasets") |> 
  collect() |> 
  mutate(
    name_short = stringr::str_replace(
      name_short,
      "AquaMaps Global Probabilities",
      "AquaMaps Global Suitabilities")) |> 
  filter(
    active,
    ds_key != "oh") |> 
  collect()

d_lyrs_ds <- tbl(con, "lyrs") |>
  filter(
    !is.na(aphia_id),
    is_ds_prime,
    ds_key != "oh") |> 
  group_by(ds_key) |> 
  summarize(n_lyr = n()) |> 
  left_join(
    tbl(con, "lyr_rgn_ds") |>
      left_join(
        tbl(con, "datasets") |> 
          select(ds_key, ds_id),
        by = "ds_id") |> 
      group_by(ds_key) |> 
      summarize(n_rgn = n()),
    by = "ds_key") |> 
  arrange(ds_key) |> 
  collect() |> 
  # replace_na(list(n_rgn = 0)) |> 
  mutate(
    n_lyr_rgn = purrr::map2_int(n_lyr, n_rgn, sum, na.rm=T))

d_ds <- d_ds |> 
  left_join(
    d_lyrs_ds,
    by = "ds_key")

d_ds |> 
  arrange(taxa_classes, ds_key) |> 
  select(
    Key      = ds_key,
    `Name*`  = name_short,
    Type     = type,
    Taxa     = taxa_classes,
    `# Taxa` = n_lyr_rgn,
    Year     = year,
    Pacific  = rgn_pacific,
    Atlantic = rgn_atlantic,
    GoMex    = rgn_gomex) |> 
    gt() |> 
    tab_spanner(
      label   = "Regions",
      columns = c(Pacific, Atlantic, GoMex)) |> 
  opt_row_striping(row_striping = T) |> 
  text_transform(
    locations = cells_body(
      columns = c(Pacific, Atlantic, GoMex)),
    fn = function(x)
      ifelse(x, "✓", "")) |> # heavy(✔) vs light(✓)
  sub_missing(
    columns      = c(Taxa, `# Taxa`),
    missing_text = "") |> 
  fmt_number(
    columns  = `# Taxa`,
    decimals = 0)
```

\* Dataset citations:

- AquaMaps Global Suitabilities [@kaschnerAquaMapsPredictedRange2019]
- IUCN Global RedList Ranges [@iucninternationalunionforconservationofnatureSpatialData2022]
- Duke Atlantic Marine Mammal Densities [@robertsHabitatbasedCetaceanDensity2016]
- SWFSC Pacific Cetacean Densities [@beckerHabitatbasedDensityEstimates2020]
- NOAA GoMex Cetacean & Sea Turtle Densities [@litzCetaceanSeaTurtle]
- NCCOS Atlantic & Pacific Seabird Densities [leirnessNCCOSAssessmentModeling2021;@winshipNCCOSAssessmentModeling2018]
- SOEST Pacific Seamount Occurrences [@kimNewGlobalSeamount2011]
- InterRidge Pacific Hydrothermal Vent Occurrences [@beaulieuInterRidgeGlobalDatabase2020]
- OregonState Global Productivity [@behrenfeldPhotosyntheticRatesDerived1997] ([sites.science.oregonstate.edu/ocean.productivity](http://sites.science.oregonstate.edu/ocean.productivity))



<!--
Dataset by dataset treatment.


-->


<!-- A couple fundamental questions driving this analysis are: How different are existing lease areas from the rest of the region? (intra-region) -->

<!-- Areas not already slated for the offshore wind leasing impact species and habitats less, so could be candidates for alternative future planning. Areas with designated military use and outside BOEM's authority (e.g., National Marine Sanctuaries) need to be further excluded from consideration. -->

<!-- How different are existing lease areas from each other within a given region? (inter-lease) -->

<!-- Within the leasing process the most oversight can be exercised within existing lease areas, especially ones in the earlier stages of Proposed Sale Notices and Call Areas. Identifying less impacted lease areas may lend greater stakeholder support for development. -->

<!-- Benthic habitats will be the focus of input data, predominantly available through the Marine Cadastre (Table 1), especially based on seafloor properties (e.g., rock, grain size, rugosity), the presence of habitat forming species (e.g, coral, seagrasses, kelp) and other species. Species data will also be assessed from the AquaMaps distribution and OBIS observations. -->

<!-- HydrothermalVents and SeaMounts were both based on on point shapefiles. Ecological distance was based. -->


## Processing Steps

```{r TODOfixOLD}
# smallest original value for a layer
# 
# tbl(con, "lyrs") |>
#   filter(
#     val_max == min(val_max))
# 
#   ds_key lyr_key   aphia_id   val_min val_max rescale_min rescale_max
#   <chr>  <chr>        <dbl>     <dbl>   <dbl>       <dbl>       <dbl>
# 1 sw     sw_137087   137087 0.0000633 0.00491           0         100
# https://www.marinespecies.org/aphia.php?p=taxdetails&id=137087#vernaculars
# [sw]: minke whale (Balaenoptera acutorostrata)
acutorostrata_val_max <- 0.00491

# largest original value for a layer
# 
# tbl(con, "lyrs") |> 
#   filter(ds_key != "vg") |> 
#   filter(
#     val_max == max(val_max))
# 
#   ds_key lyr_key   aphia_id     val_min val_max rescale_min rescale_max
#   <chr>  <chr>        <dbl>       <dbl>   <dbl>       <dbl>       <dbl>
# 1 du     du_137094   137094 0.000000979    286.           0         100
# https://www.marinespecies.org/aphia.php?p=taxdetails&id=137094#vernaculars
# [du]: common dolphin (_Delphinus delphis_)
delphis_val_max <- 286
```

1.  **Download datasets**\
    Datasets were downloaded from their online sources and chosen based on availability throughout the EEZ of one or more of the U.S. regions (i.e., Pacific, Gulf of Mexico and/or Atlantic).

2.  **Convert dataset layers to common raster format**\
    In order to calculate quickly across a wide range of spatial data based on different formats (vector or raster), spatial units of analysis and projections, a common study area and grid was generated from the **GEBCO** bathymetric grid at 15 arc second spatial resolution and projected to Web Mercator for readily displaying in "slippy" maps online to easily show basemaps of interest (e.g. the Esri Ocean basemap). The area-based distortion of Web Mercator was compensated for by calculating the true area per cell as a separate layer for deriving the area-weighted average in the output cells.
    All data layers were downscaled to a common grid of approximately 15 arc-seconds (each pixel ranging in area `r paste(format(range(rng_web_areakm2), digits=2), collapse = " to ")` km^2^) aligned with the GEBCO high resolution global bathymetry in order to calculate differences between individual lease blocks (ranging in area `r paste(format(range(offhabr::oh_blocks$area_km2), digits=2), collapse = " to ")` km^2^).

3.  **Average within dataset-species layers**\
    Some datasets include seasonally (e.g., "Duke Atlantic Marine Mammal Densities) or regionally (e.g., "NCCOS Atlantic & Pacific Seabird Densities") distinct density surfaces. These get averaged (for seasonal) and mosaicked (for regional) together to produce a single average per dataset and species.

4.  **Rescale dataset-species layers 0 to 100% for all model types**\
    While this analysis is detailed spatially, it is coarse in terms of abundance, since the best available spatial distribution information is combined across disparate dataset types (see [@tbl-datasets]), i.e. expert [***range***]{.underline} maps (i.e., "IUCN Global RedList Ranges"), [***suitability***]{.underline} of occurrence (i.e., "AquaMaps Global Suitabilities") and [***density***]{.underline} surface models (e.g., "Duke Atlantic Marine Mammal Densities", "SWFSC Pacific Cetacean Densities", "NCCOS Atlantic & Pacific Seabird Densities", "NOAA GoMex Cetacean & Sea Turtle Densities"). Model values were rescaled 0 to 100%, i.e. normalized to the existing suitability of occurrence range of values, similar to the dataset "AquaMaps Global Suitabilities". For instance, the original maximum [***density***]{.underline} surface model value for common dolphins (*Delphinus delphis*) in the Atlantic from "Duke Atlantic Marine Mammal Densities" is `r delphis_val_max` individuals per km^2^, whereas for the minke whale (Balaenoptera acutorostrata) in the Pacific from "SWFSC Pacific Cetacean Densities" is `r acutorostrata_val_max` individuals per km^2^. Both of these maxima are converted to 100, since we are not comparing relative abundance between species but rather within species. Since expert [***range***]{.underline} maps are binary in nature, i.e. in or out of range, a single value of 50% is applied within the range. Converting the stored values to single unsigned integers (`INT1U` for the range \[0, 100\]) enables a significant reduction of individual raster file sizes. Furthermore, zeros were converted to `NA` (not available) for the sake of calculating the species range. A similar hierarchy was taken for "Biologically Important Areas to Cetaceans" in the US [@labrecqueBiologicallyImportantAreas2015].

```{r n_spp}
d_spp <- tbl(con, "lyrs") |> 
  filter(
    is_ds_prime == T,
    !is.na(aphia_id)) |> 
  collect()
n_spp <- nrow(d_spp)

n_spp_oh <- d_spp |> 
  filter(
    ds_key == "oh") |> 
  nrow()
```

5.  **Mosaic to single taxa across datasets, taxa**\
Since some datasets were not present in all regions, a mosaic approach was taken whereby different datasets could contribute to different regions, based on which had the most preferred data type (***density*** > ***suitability*** > ***range*** > ***occurrence***) and most recently collected (***newer*** > ***older***). Of `r format(n_spp, big.mark=',')` species, only `r n_spp_oh` had multiple datasets contributing to different regions.

6.  **Aggregate layers to use as inputs to scoring**\
**Species Richness** was calculated as the sum of the presence of taxa in a given pixel. **Species Abundance** was the sum of the normalized abundance (ranging 1 to 100) within the pixel across all species. **Extinction Risk** was based on the sum of all species IUCN RedList Categories for the given pixel, based on conversion of the categories to a score:  `0` for Least Concern (LC), `1` for Near Threatened (NT), `2` for Vulnerable (VU), `3` for Endangered (EN) and `4` for Critically endangered (CR) [@juslenApplicationRedList2016a;butchartImprovementsRedList2007].

7.  **Score with input layers**\
Calculate the score per pixel with the input aggregate layers using [@eq-scoring].

8.  **Extract across spatial hierarchies**\
Average zonal statistics were then captured across the full spatial hierarchy of Study, Regions, Zones and Blocks.

9.  **Normalize Block scores**\
In order to easily compare Blocks within a Zone, pixel and Block scores were subtracted from the Zone mean and divided by the standard deviation ([@eq-normalizing]). This way pixels and Blocks equal to the mean will be 0, positive values containing higher conservation scores, negative values lower conservation scores.

## Scoring Conservation Value

By combining disperate layers with weights we can arrive at a fundamental conservation index [@oharaAnticipatingFutureWorld2022].

$$
\begin{aligned}
& \mathrm rescale(x) = [x - min(x)] / [max(x) - min(x)] \\
\\
& \mathrm Score_{raw} = w_{SR} * rescale(SpeciesRichness) \\
& \mathrm + w_{SA} * rescale(SpeciesAbundance) \\
& \mathrm + w_{ER} * rescale(ExtinctionRisk) \\
& \mathrm + w_{PP} * rescale(PrimaryProductivity) \\
& \mathrm + w_{HV} * rescale(HydrothermalVents) \\
& \mathrm + w_{S} * rescale(Seamounts) \\
\\
& \mathrm Score = rescale(Score_{raw}) * 100
\end{aligned}
$$ {#eq-scoring}

The $HydrothermalVents$ and $SeaMounts$ layers are presence-only (i.e., binary, `1` or `0`), so convert to a value of `0.5` where present, whereas the other layers have a range from `0` to `1`.

A naive weighting approach is taken in which all weights $w$ are given an identity value of `1`. To allow different value sets among users, a useful future application would calculate new scores based on expert-weighted values.

## Normalizing within Zone for Block Comparison

In order to evaluate conservation value within a given Zone, we normalized the score for each pixel by subtracting the Zone average ($\mu$) and dividing by the standard deviation ($\sigma$) of the scores in the given Zone:

$$
\begin{aligned}
Score_{normalized Zone} = (Score - \mu) / \sigma\\
where:\\
\mu = mean(Score_{Zone}) \\
\sigma = sd(Sore_{Zone})
\end{aligned}
$$ {#eq-normalizing}

```{r dbDisconnect}
DBI::dbDisconnect(con, shutdown=T)
```

## Reproducible Science

All methods for development of this conservation atlas were implemented using the R programming language and principles of reproducible science [@lowndesOurPathBetter2017]. Reusable functions have been documented into the R package [offhabr](https://offshorewindhabitat.info/offhabr/reference/index.html), which generate cloud-optimized GeoTIFFs (see [cogeo.org](https://www.cogeo.org/)) to store and display raster maps on the fly (using [TiTiler](https://developmentseed.org/titiler/)). Functions to load and analyze the stack of rasters in Google Earth Engine are also included. Data on species and datasets were stored in [DuckDB](https://duckdb.org/) and made available through the R package.
