# Results

```{r setup-intro}
source("scripts/setup.R")
```

From the fine scale pixelated maps we aggregate up to the Block, Zone and at the broadest level Region. The normalized species distributions, e.g. the humpback whale [_Megaptera novaeangliae_](https://offshorewindhabitat.shinyapps.io/sp_map/?aphia_id=137092) (@fig-sp-map-humpback), for all `r format(nspp, big.mark=",")` species, are available online (@fig-species_all_table-static; see online interactive table in [Appendix A — Species](https://offshorewindhabitat.info/report/appx_species.html)). The taxonomic distribution is also visualized as a treemap (@fig-species_all_treemap-static; see online interactive treemap in [Appendix A — Species](https://offshorewindhabitat.info/report/appx_species.html)).

```{r}
#| label: fig-sp-map-humpback
#| fig-cap: 'Individual Species Distribution Model (SDM) retrieved by visiting one of the links in the table of the online [Species Appendix](https://offshorewindhabitat.info/report/appx_species.html), in this case for the humpback whale [_Megaptera novaeangliae_](https://offshorewindhabitat.shinyapps.io/sp_map/?aphia_id=137092). Note the stitching of several SDM datasets (@tbl-datasets) by region: 1) "SWFSC Pacific Cetacean Densities" in the Pacific; 2) "Duke Atlantic Marine Mammal Densities" in the Atlantic; and 3) "AquaMaps Global Probabilities" in the Gulf of Mexico.'
#| fig-align: "center"
#| out-width: "100%"
include_graphics("./figures/sp-map_screenshot_Megaptera.png")
```

```{r}
#| label: fig-species_all_table-static
#| fig-cap: Interactive table of species found in the study area. Click on the link to be taken to the interactive map of that species. Use the Search box to search any part of the taxonomic name hierarchy.

include_graphics(species_all_table_png) # had to manually screenshot
```


```{r}
#| label: fig-species_all_treemap-static
#| fig-cap: "Taxonomic composition of all species in the study area with successive levels for Kingdom > Phylum > Class > Order > Family > Genus species. See also the online interactive version in [Appendix A — Species](https://offshorewindhabitat.info/report/appx_species.html)."
#| fig-align: "center"
#| out-width: "100%"

include_graphics(species_all_treemap_png)
```

These individual SDMs contribute to metrics for overall Species Richness (the sum of species present as 1 versus absent 0), Species Abundance (the sum of the harmonized score ranging 0 to 100), and Extinction Risk (sum of extinction risk weighted score 0 to 4). The final pixelated maps are visible under the "Pixel Values" subheadings of the online [Appendix B — Scoring](https://offshorewindhabitat.info/report/appx_scoring.html) as well maps under the "Zone Averages" subheadings displaying the comparative Zone's average pixel value. For instance, you can view the overall Score per pixel (@fig-scoring_score_pixel-static) and Zone (@fig-scoring_score_zone-static), as well as species richness pixel (@fig-scoring_richness_pixel-static) and Zone (@fig-scoring_richness_zone-static).

The average pixel values of each summary metric per Zone and broader Region are summarized into Table [tbl-zones](#tbl-zones). The Block values are displayed as a map and table per Zone under the online  * [Appendix C — Blocks](https://offshorewindhabitat.info/report/appx_blocks.html). These values have been normalized to display the deviation from the average value within the containing Zone so as to answer the question, which blocks are unusually high or low relative to the Zone's average?

```{r}
#| label: fig-scoring_score_pixel-static
#| fig-cap: "Map of overall score throughout the study area by pixel with Zones overlaid. See also the online interactive map in [Appendix B — Scoring](https://offshorewindhabitat.info/report/appx_species.html)."
#| fig-align: "center"
#| out-width: "100%"

include_graphics(here("figures/scoring_score_pixel.png"))
```

```{r}
#| label: fig-scoring_score_zone-static
#| fig-cap: "Map of average score throughout the study area by Zone. See also the online interactive map in [Appendix B — Scoring](https://offshorewindhabitat.info/report/appx_species.html)."
#| fig-align: "center"
#| out-width: "100%"

include_graphics(here("figures/scoring_score_zone.png"))
```

```{r}
#| label: fig-scoring_richness_pixel-static
#| fig-cap: "Map of overall species richness throughout the study area by pixel with Zones overlaid. See also the online interactive map in [Appendix B — Scoring](https://offshorewindhabitat.info/report/appx_species.html)."
#| fig-align: "center"
#| out-width: "100%"

include_graphics(here("figures/scoring_richness_pixel.png"))
```

```{r}
#| label: fig-scoring_richness_zone-static
#| fig-cap: "Map of average species richness throughout the study area by Zone. See also the online interactive map in [Appendix B — Scoring](https://offshorewindhabitat.info/report/appx_species.html)."
#| fig-align: "center"
#| out-width: "100%"

include_graphics(here("figures/scoring_richness_zone.png"))
```

Based on the best available species distributions, the Atlantic Region displays the highest average species richness (698.6 species per pixel), compared to the moderate Gulf of Mexico (38.9) or lowest Pacific (15.5). 

```{r setup}
librarian::shelf(
  devtools, dplyr, DT, fs, glue, gt, here, htmltools, knitr, leaflet, leaflet.extras,
  yogevherz/plotme, purrr, readr, sf, stringr, 
  tibble, tidyr, 
  quiet = T)
load_all("~/Github/offshorewindhabitat/offhabr")
options(readr.show_col_types = F)

con <- oh_con() # DBI::dbDisconnect(con, shutdown=T)

# tbl(con, "lyrs") |>
#   filter(is.na(aphia_id), is_ds_prime) |> 
#   pull(lyr_key)
#  [1] "vg"              "sm"              "ve"             
#  [4] "er_web_rescaled" "er_web"          "er_web_rescaled"
#  [7] "sa_web"          "sa_web_rescaled" "score_v1_web"   
# [10] "sm_web"          "sm_web_rescaled" "sp_web"         
# [13] "sp_web_rescaled" "ve_web"          "ve_web_rescaled"
# [16] "vg_web"          "vg_web_rescaled"
```


```{r zonal-prep}
z_csv <- here("../scripts/data/zonal_zones.csv")

# zone spatial features
f_z <- oh_zones_s1k |> 
  filter(zone_version == 1) |> 
  left_join(
    read_csv(z_csv) |> 
      mutate(across(where(is.numeric), \(x) round(x, 1))), 
    by = c("zone_id" = "zone_id_v1")) |> 
  mutate(
    area_km2 = round(area_km2, 1))

# region spatial features, as area-weighted means
f_r <- f_z |> 
  group_by(region) |> 
  summarize(
    score_v1_web = weighted.mean(score_v1_web, area_km2),
    sp_web       = weighted.mean(sp_web, area_km2),
    sa_web       = weighted.mean(sa_web, area_km2),
    er_web       = weighted.mean(er_web, area_km2),
    vg_web       = weighted.mean(vg_web, area_km2),
    ve_web       = weighted.mean(ve_web, area_km2, na.rm = T),
    sm_web       = weighted.mean(sm_web, area_km2, na.rm = T),
    area_km2     = sum(area_km2)) |> 
  mutate(
    zone_name = "ALL") |> 
  mutate(
    across(where(is.numeric), ~ round(.x, 1)))

# data of zones (and regions) to display as a table
d_z <- f_z |> 
  st_drop_geometry() |> 
  bind_rows(
    f_r |> 
      st_drop_geometry()) |> 
  arrange(region, zone_name) |> 
  select(
    region, 
    zone  = zone_name,
    score = score_v1_web,
    sp    = sp_web,
    sa    = sa_web,
    er    = er_web,
    vg    = vg_web,
    ve    = ve_web,
    sm    = sm_web,
    area_km2) |> 
  mutate(
    score_clr = "",
    sp_clr    = "",
    sa_clr    = "",
    er_clr    = "",
    vg_clr    = "",
    ve_clr    = "",
    sm_clr    = "",
    area_clr  = "") |> 
  relocate(score_clr, .after = score) |> 
  relocate(sp_clr, .after = sp) |> 
  relocate(sa_clr, .after = sa) |> 
  relocate(er_clr, .after = er) |> 
  relocate(vg_clr, .after = vg) |> 
  relocate(ve_clr, .after = ve) |> 
  relocate(sm_clr, .after = sm) |> 
  relocate(area_clr, .after = area_km2)
```

<a name="tbl-zones"></a>
```{r tbl_zones}
#| label: tbl_zones
#| column: screen-inset
# tbl-cap: !expr cap_docx

cap <- "Table [tbl-zones]. Average pixel values across Regions and Zones for overall Score as well as input layers. Values are colored per column highest to lowest: red, orange, yellow, green, blue, violet."
cap_html <- glue("{cap} Columns are sortable.")
cap_docx <- glue("{cap} Sortable table is [online](https://offshorewindhabitat.info/report/results.html#tbl-zones).")


hdr_html = withTags(table(
  class = "display",
  thead(
    tr(
      th(rowspan = 2, "Region"),
      th(rowspan = 2, "Zone"),
      th(rowspan = 2, "Score"),
      th(rowspan = 2, ""),
      th(colspan = 6, "Species"),
      th(colspan = 6, "Habitats"),
      th(rowspan = 2, HTML("Area (km<sup>2</sup>)")),
      th(rowspan = 2, "")),
    tr(
      th("Richness"),
      th(""),
      th("Abundance"),
      th(""),
      th("Extinction Risk"),
      th(""),
      th("Primary Productivity"),
      th(""),
      th("Hydrothermal Vents"),
      th(""),
      th("Seamounts"),
      th("") ) ) ))

flds_clr <- colnames(select(d_z, ends_with("_clr")))
tbl_html <- d_z |> 
  datatable(
    container = hdr_html,
    rownames = F,
    escape = F,
    caption = cap_html,
    options = list(
      columnDefs = list(
        list(
          width = '0px', targets = flds_clr),
        list(
          orderable = F, targets = flds_clr)),
      pageLength = nrow(d_z),
      dom = 't')) |> 
  formatRound(c("score", "sp", "sa", "er", "vg", "area_km2"), 1) |> 
  formatRound(c("ve", "sm"), 0) |> 
  dt_color_fld("score") |> 
  dt_color_fld("sp") |>
  dt_color_fld("sa") |>
  dt_color_fld("er") |>
  dt_color_fld("vg") |>
  dt_color_fld("ve") |>
  dt_color_fld("sm") |>
  dt_color_fld("area_km2", "area_clr")

tbl_docx <- d_z |> 
  gt() |> 
  fmt_number(decimals = 1) |> 
  fmt_number(
    columns = c(ve,	sm), decimals = 0) |> 
  sub_missing(missing_text = "–") |> 
  cols_label(
    region     = "Region",
    zone       = "Zone",
    score      = "Score",
    score_clr  = "",
    sp         = "Richness",
    sp_clr     = "",
    sa         = "Abundance",
    sa_clr     = "",
    er         = "Extinction Risk",
    er_clr     = "",
    vg         = "Primary Productivity",
    vg_clr     = "",
    ve         = "Hydrothermal Vents",
    ve_clr     = "",
    sm         = "Seamounts",
    sm_clr     = "",
    area_clr   = "",
    area_km2   = "Area (km²)") |> 
  data_color(
    columns = score, target_columns = score_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = sp, target_columns = sp_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = sa, target_columns = sa_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = er, target_columns = er_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = vg, target_columns = vg_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = ve, target_columns = ve_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = sm, target_columns = sm_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  data_color(
    columns = area_km2, target_columns = area_clr,
    method  = "numeric", palette = "Spectral", reverse = T) |> 
  tab_spanner(
    label = "Species",  
    columns = c(sp, sp_clr, sa, sa_clr, er, er_clr)) |> 
  tab_spanner(
    label = "Habitats", 
    columns = c(vg, vg_clr, ve, ve_clr, sm, sm_clr)) |> 
  tab_options(
    table.font.size = "6px") |> 
  tab_caption(cap_docx)

switch(
  is_html_output() |> as.character(),
  `TRUE`  = tbl_html,
  `FALSE` = tbl_docx)
```

`r if(!is_html_output()) glue("[TODO: format table as Calibri size 8. R-click: Insert caption, borders, merge cells, swap state codes like example.\n\n{cap_docx}\n]")`

```{r dbDisconnect}
DBI::dbDisconnect(con, shutdown=T)
```

